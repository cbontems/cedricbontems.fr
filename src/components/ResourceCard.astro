---
import type { CollectionEntry } from "astro:content";

type Props = { resource: CollectionEntry<"resources"> };

const { title, description, link, category } = Astro.props.resource.data;
---

<article>
	<h3>{title}</h3>
	{description && <p>{description}</p>}
	{
		link && (
			<a href={link} rel="noopener noreferrer">
				{`Jump to “${title}${category.singular}” →`}
			</a>
		)
	}
</article>

<style>
	article {
		position: relative;
		display: flex;
		block-size: 100%;
		flex-direction: column;
		align-items: flex-start;
		justify-content: space-between;
		padding-inline: 1em;
		padding-block: 1em;
		gap: 1em;
		background-color: var(--surface-1);
		&:hover,
		&:not(:active):focus-within {
			outline: var(--border) solid var(--neon);
			outline-offset: 5px;
			outline-offset: 5px;
			outline-style: solid;
			outline-width: var(--outline);
			outline-color: var(--accent);
			transition-duration: 0.25s;
			@media (--motionOK) {
				transition: outline-offset 145ms ease;
			}

			& h3,
			a {
				color: var(--text-1);
				text-decoration: underline;
				outline: none;
			}
		}
		& h3 {
			inline-size: 100%;
			padding-block-end: 0.5em;
			border-block-end-width: var(--border);
			border-block-end-style: solid;
			border-color: var(--text-1);
		}
		& small {
			display: flex;
			align-items: center;
			gap: 0.5em;
		}
		& > a {
			text-align: end;
			display: block;
			inline-size: 100%;
			font-size: 80%;
			text-wrap: balance;
			text-decoration: none;
			color: var(--neon);
			&::before {
				content: "";
				display: block;
				position: absolute;
				inset: 0;
			}
		}
	}
</style>
