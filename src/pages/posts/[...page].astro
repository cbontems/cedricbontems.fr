---
import { GetStaticPathsOptions, Page } from "astro";
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "~/layouts/MainLayout.astro";
import PostArchiveHeader from "~/components/PostArchiveHeader.astro";
import siteInfo from "~/data/site-info";
import PostFooter from "~/components/PostFooter.astro";
import HomeBody from "~/components/HomeBody.astro";
import PostPagination from "~/components/PostPagination.astro";
import { getCategories } from "~/helpers/categories";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	// fetch all showcase sites
	const posts = await getCollection("blog");

	// sort featured sites to the front, randomize the rest
	const sortedPosts = posts.sort(
		(a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
			b.data.publishDate.getTime() - a.data.publishDate.getTime(),
	);

	return paginate(sortedPosts, { pageSize: siteInfo.postPerPage });
}
const posts = await getCollection("blog");
const categories = getCategories(posts);
const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };

const allPages = [...Array(page.lastPage).keys()].map((num) => {
	return `/posts${num === 0 ? "" : `/${String(num + 1)}`}`;
});
---

<Layout
	title={`The ${siteInfo.name} Blog`}
	description={`Get all the latest news from ${siteInfo.name}`}
	image={{ src: "/og/blog.jpg", alt: `The ${siteInfo.name} Blog` }}
>
	<PostArchiveHeader page={page}  />
	<HomeBody posts={page.data} categories={categories} />
	<PostPagination restRoute allPages={allPages} page={page} />
	<PostFooter />
</Layout>
