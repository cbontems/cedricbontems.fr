---
import { GetStaticPathsOptions, Page } from "astro";
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "~/layouts/MainLayout.astro";
import Header from "~/components/Header.astro";
import Breadcrumbs from "~/components/Breadcrumbs.astro";
import siteInfo from "~/data/site-info";
import PostFooter from "~/components/PostFooter.astro";
import HomeBody from "~/components/HomeBody.astro";
import PostPagination from "~/components/PostPagination.astro";
import { getCategories } from "~/helpers/categories";


export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	// fetch all showcase sites
	const posts = await getCollection("blog");

	// sort featured sites to the front, randomize the rest
	const sortedPosts = posts.sort(
		(a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
			b.data.publishDate.getTime() - a.data.publishDate.getTime(),
	);

	return paginate(sortedPosts, { pageSize: siteInfo.postPerPage });
}
const posts = await getCollection("blog");
const categories = getCategories(posts);
const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };

const allPages = [...Array(page.lastPage).keys()].map((num) => {
	return `/posts${num === 0 ? "" : `/${String(num + 1)}`}`;
});

---

<Layout
	title={`The ${siteInfo.name} Blog`}
	description={`Get all the latest news from ${siteInfo.name}`}
	image={{ src: "/og/blog.jpg", alt: `The ${siteInfo.name} Blog` }}
>
	<div
		class="page-header"
	>
		<Header />
	</div>
	<HomeBody posts={page.data} categories={categories} />
	<PostPagination restRoute allPages={allPages} page={page} />
	<PostFooter />
</Layout>

<style>
	@import "~/styles/media.css";

	div.page-header {
		grid-column: 1 / -1;
		display: grid;
		grid-template-columns: 1fr;
		
		position: relative;
		overflow: hidden;
		margin-block-end: var(--size-9);
		@media (--md-n-above) {
			grid-template-columns: var(--site-columns);
		}
	}
	div.overlap {
		margin-inline: var(--size-3);
		display: grid;
		grid-column: 1;
		@media (--md-n-above) {
			grid-column: 2 / -1;
		}
	}
	div.bigText {
		grid-column: 1;
		grid-row: 1;
		font-size: clamp(4rem, 38vw + 1rem, 36.25rem);
		font-family: var(--font-mono);
		font-weight: 700;
		line-height: normal;
		color: var(--brand);
	}
	h1 {
		grid-column: 1;
		grid-row: 1;
		color: var(--black);
		font-family: var(--font-mono);
		font-weight: 700;
		font-size: clamp(2rem, 8vw + 1rem, 4rem);
		line-height: normal;
	}
</style>




	